-- DROP SCHEMA benefits;

CREATE SCHEMA benefits AUTHORIZATION postgres;

-- DROP SEQUENCE benefits.amount_idamount_seq;

CREATE SEQUENCE benefits.amount_idamount_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE benefits.benefit_idbenefit_seq;

CREATE SEQUENCE benefits.benefit_idbenefit_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE benefits.transaction_idtransaction_seq;

CREATE SEQUENCE benefits.transaction_idtransaction_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;-- benefits.amount определение

-- Drop table

-- DROP TABLE benefits.amount;

CREATE TABLE benefits.amount (
	idamount int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
	idbenefit int4 NOT NULL,
	sum numeric NOT NULL,
	"start" timestamp NOT NULL,
	"end" timestamp NULL,
	CONSTRAINT "PK_amount" PRIMARY KEY (idamount)
);
CREATE INDEX "IX_amount_idbenefit" ON benefits.amount USING btree (idbenefit);


-- benefits.benefit определение

-- Drop table

-- DROP TABLE benefits.benefit;

CREATE TABLE benefits.benefit (
	idbenefit int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
	idcategory int4 NOT NULL,
	"type" int2 NOT NULL,
	active bool NOT NULL,
	CONSTRAINT "PK_benefit" PRIMARY KEY (idbenefit)
);
CREATE INDEX "IX_benefit_idcategory" ON benefits.benefit USING btree (idcategory);


-- benefits."transaction" определение

-- Drop table

-- DROP TABLE benefits."transaction";

CREATE TABLE benefits."transaction" (
	idtransaction int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
	idcategory_transaction int4 NOT NULL,
	idbenefit int4 NOT NULL,
	amount numeric NOT NULL,
	CONSTRAINT "PK_transaction" PRIMARY KEY (idtransaction)
);
CREATE INDEX "IX_transaction_idbenefit" ON benefits.transaction USING btree (idbenefit);
CREATE INDEX "IX_transaction_idcategory_transaction" ON benefits.transaction USING btree (idcategory_transaction);


-- benefits.amount внешние включи

ALTER TABLE benefits.amount ADD CONSTRAINT "FK_amount_benefit_idbenefit" FOREIGN KEY (idbenefit) REFERENCES benefits.benefit(idbenefit) ON DELETE CASCADE;


-- benefits.benefit внешние включи

ALTER TABLE benefits.benefit ADD CONSTRAINT "FK_benefit_category_idcategory" FOREIGN KEY (idcategory) REFERENCES categories.category(idcategory) ON DELETE CASCADE;


-- benefits."transaction" внешние включи

ALTER TABLE benefits."transaction" ADD CONSTRAINT "FK_transaction_benefit_idbenefit" FOREIGN KEY (idbenefit) REFERENCES benefits.benefit(idbenefit) ON DELETE CASCADE;
ALTER TABLE benefits."transaction" ADD CONSTRAINT "FK_transaction_transaction_idcategory_transaction" FOREIGN KEY (idcategory_transaction) REFERENCES categories."transaction"(idtransaction) ON DELETE CASCADE;

-- DROP SCHEMA bills;

CREATE SCHEMA bills AUTHORIZATION postgres;

-- DROP SEQUENCE bills.bill_idbill_seq;

CREATE SEQUENCE bills.bill_idbill_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE bills.paydocument_idpayment_document_seq;

CREATE SEQUENCE bills.paydocument_idpayment_document_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE bills.replenishment_idreplenishment_seq;

CREATE SEQUENCE bills.replenishment_idreplenishment_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE bills.replenishmentdetail_idreplenishmentdetail_seq;

CREATE SEQUENCE bills.replenishmentdetail_idreplenishmentdetail_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;-- bills.paydocument определение

-- Drop table

-- DROP TABLE bills.paydocument;

CREATE TABLE bills.paydocument (
	idpayment_document int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
	"number" varchar(50) NULL,
	formation_date timestamp NULL,
	sum numeric NULL,
	reestr_num varchar(50) NULL,
	file_name varchar(200) NOT NULL,
	imported_date timestamp NOT NULL,
	haserror bool NOT NULL,
	file_status bool NOT NULL,
	hash varchar(4000) NULL,
	payagent_type int2 NOT NULL,
	arrival_date timestamp NULL,
	error text NULL,
	CONSTRAINT "PK_paydocument" PRIMARY KEY (idpayment_document)
);


-- bills.bill определение

-- Drop table

-- DROP TABLE bills.bill;

CREATE TABLE bills.bill (
	idbill int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
	"type" int2 NOT NULL,
	iduser int4 NOT NULL,
	num varchar(15) NOT NULL,
	extnum text NULL,
	balance numeric NOT NULL,
	active bool NOT NULL,
	idkshp int4 NOT NULL,
	CONSTRAINT "PK_bill" PRIMARY KEY (idbill)
);
CREATE INDEX "IX_bill_idkshp" ON bills.bill USING btree (idkshp);


-- bills.replenishment определение

-- Drop table

-- DROP TABLE bills.replenishment;

CREATE TABLE bills.replenishment (
	idreplenishment int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
	sum numeric NOT NULL,
	createdate timestamp NOT NULL,
	"type" int2 NOT NULL,
	idkshp int4 NULL,
	payagent int2 NOT NULL,
	idpayment int4 NULL,
	idclass int4 NULL,
	idschool int4 NULL,
	idcategory_transaction int4 NULL,
	idbuffet_transaction int4 NULL,
	idbill int4 NOT NULL,
	idext int8 NULL,
	idcategory_transaction1 int4 NULL,
	idbuffet_transaction1 int4 NULL,
	idpayment1 int4 NULL,
	idbill1 int4 NULL,
	CONSTRAINT "PK_replenishment" PRIMARY KEY (idreplenishment)
);
CREATE INDEX "IX_replenishment_idbill" ON bills.replenishment USING btree (idbill);
CREATE INDEX "IX_replenishment_idbuffet_transaction1" ON bills.replenishment USING btree (idbuffet_transaction1);
CREATE INDEX "IX_replenishment_idcategory_transaction1" ON bills.replenishment USING btree (idcategory_transaction1);
CREATE INDEX "IX_replenishment_idkshp" ON bills.replenishment USING btree (idkshp);
CREATE INDEX "IX_replenishment_idpayment1" ON bills.replenishment USING btree (idpayment1);


-- bills.replenishmentdetail определение

-- Drop table

-- DROP TABLE bills.replenishmentdetail;

CREATE TABLE bills.replenishmentdetail (
	idreplenishmentdetail int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
	idbill int4 NOT NULL,
	idbill_move int4 NULL,
	sum numeric NOT NULL,
	"comment" text NULL,
	docuemnt_number text NULL,
	iduser int4 NOT NULL,
	createddate timestamp NOT NULL,
	"type" int2 NOT NULL,
	idbill_move1 int4 NULL,
	CONSTRAINT "PK_replenishmentdetail" PRIMARY KEY (idreplenishmentdetail)
);
CREATE INDEX "IX_replenishmentdetail_idbill" ON bills.replenishmentdetail USING btree (idbill);
CREATE INDEX "IX_replenishmentdetail_idbill_move1" ON bills.replenishmentdetail USING btree (idbill_move1);


-- bills.bill внешние включи

ALTER TABLE bills.bill ADD CONSTRAINT "FK_bill_kshp_idkshp" FOREIGN KEY (idkshp) REFERENCES kshps.kshp(idkshp) ON DELETE CASCADE;


-- bills.replenishment внешние включи

ALTER TABLE bills.replenishment ADD CONSTRAINT "FK_replenishment_bill_idbill" FOREIGN KEY (idbill) REFERENCES bills.bill(idbill) ON DELETE CASCADE;
ALTER TABLE bills.replenishment ADD CONSTRAINT "FK_replenishment_kshp_idkshp" FOREIGN KEY (idkshp) REFERENCES kshps.kshp(idkshp) ON DELETE RESTRICT;
ALTER TABLE bills.replenishment ADD CONSTRAINT "FK_replenishment_paydocument_idpayment1" FOREIGN KEY (idpayment1) REFERENCES bills.paydocument(idpayment_document) ON DELETE RESTRICT;
ALTER TABLE bills.replenishment ADD CONSTRAINT "FK_replenishment_transaction_idbuffet_transaction1" FOREIGN KEY (idbuffet_transaction1) REFERENCES buffets."transaction"(idtransaction) ON DELETE RESTRICT;
ALTER TABLE bills.replenishment ADD CONSTRAINT "FK_replenishment_transaction_idcategory_transaction1" FOREIGN KEY (idcategory_transaction1) REFERENCES categories."transaction"(idtransaction) ON DELETE RESTRICT;


-- bills.replenishmentdetail внешние включи

ALTER TABLE bills.replenishmentdetail ADD CONSTRAINT "FK_replenishmentdetail_bill_idbill" FOREIGN KEY (idbill) REFERENCES bills.bill(idbill) ON DELETE CASCADE;
ALTER TABLE bills.replenishmentdetail ADD CONSTRAINT "FK_replenishmentdetail_bill_idbill_move1" FOREIGN KEY (idbill_move1) REFERENCES bills.bill(idbill) ON DELETE RESTRICT;

-- DROP SCHEMA buffets;

CREATE SCHEMA buffets AUTHORIZATION postgres;

-- DROP SEQUENCE buffets.cashbox_idcashbox_seq;

CREATE SEQUENCE buffets.cashbox_idcashbox_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE buffets.product_idproduct_seq;

CREATE SEQUENCE buffets.product_idproduct_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE buffets.transaction_idtransaction_seq;

CREATE SEQUENCE buffets.transaction_idtransaction_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE buffets.transaction_item_idtransaction_item_seq;

CREATE SEQUENCE buffets.transaction_item_idtransaction_item_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;-- buffets.cashbox определение

-- Drop table

-- DROP TABLE buffets.cashbox;

CREATE TABLE buffets.cashbox (
	idcashbox int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
	title varchar(50) NOT NULL,
	idkshp_school int4 NOT NULL,
	CONSTRAINT "PK_cashbox" PRIMARY KEY (idcashbox)
);
CREATE INDEX "IX_cashbox_idkshp_school" ON buffets.cashbox USING btree (idkshp_school);


-- buffets.product определение

-- Drop table

-- DROP TABLE buffets.product;

CREATE TABLE buffets.product (
	idproduct int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
	title varchar(100) NOT NULL,
	idkshp int4 NOT NULL,
	active bool NOT NULL,
	idkshp_school int4 NOT NULL,
	CONSTRAINT "PK_product" PRIMARY KEY (idproduct)
);
CREATE INDEX "IX_product_idkshp" ON buffets.product USING btree (idkshp);
CREATE INDEX "IX_product_idkshp_school" ON buffets.product USING btree (idkshp_school);


-- buffets."transaction" определение

-- Drop table

-- DROP TABLE buffets."transaction";

CREATE TABLE buffets."transaction" (
	idtransaction int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
	idkshp int4 NOT NULL,
	idkshp_school int4 NOT NULL,
	idcard int4 NULL,
	processingdate timestamp NOT NULL,
	sum numeric NOT NULL,
	itemcount int4 NOT NULL,
	"type" int2 NOT NULL,
	idcashbox int4 NOT NULL,
	idclass int4 NULL,
	createddate timestamp NOT NULL,
	idgateway int4 NULL,
	idbill int4 NULL,
	active bool NOT NULL,
	CONSTRAINT "PK_transaction" PRIMARY KEY (idtransaction)
);
CREATE INDEX "IX_transaction_idbill" ON buffets.transaction USING btree (idbill);
CREATE INDEX "IX_transaction_idkshp" ON buffets.transaction USING btree (idkshp);
CREATE INDEX "IX_transaction_idkshp_school" ON buffets.transaction USING btree (idkshp_school);


-- buffets.transaction_item определение

-- Drop table

-- DROP TABLE buffets.transaction_item;

CREATE TABLE buffets.transaction_item (
	idtransaction_item int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
	idtransaction int4 NOT NULL,
	idproduct int4 NOT NULL,
	price numeric NOT NULL,
	count int4 NOT NULL,
	CONSTRAINT "PK_transaction_item" PRIMARY KEY (idtransaction_item)
);
CREATE INDEX "IX_transaction_item_idproduct" ON buffets.transaction_item USING btree (idproduct);
CREATE INDEX "IX_transaction_item_idtransaction" ON buffets.transaction_item USING btree (idtransaction);


-- buffets.cashbox внешние включи

ALTER TABLE buffets.cashbox ADD CONSTRAINT "FK_cashbox_kshp_school_idkshp_school" FOREIGN KEY (idkshp_school) REFERENCES kshps.kshp_school(idkshp_school) ON DELETE CASCADE;


-- buffets.product внешние включи

ALTER TABLE buffets.product ADD CONSTRAINT "FK_product_kshp_idkshp" FOREIGN KEY (idkshp) REFERENCES kshps.kshp(idkshp) ON DELETE CASCADE;
ALTER TABLE buffets.product ADD CONSTRAINT "FK_product_kshp_school_idkshp_school" FOREIGN KEY (idkshp_school) REFERENCES kshps.kshp_school(idkshp_school) ON DELETE CASCADE;


-- buffets."transaction" внешние включи

ALTER TABLE buffets."transaction" ADD CONSTRAINT "FK_transaction_bill_idbill" FOREIGN KEY (idbill) REFERENCES bills.bill(idbill) ON DELETE RESTRICT;
ALTER TABLE buffets."transaction" ADD CONSTRAINT "FK_transaction_kshp_idkshp" FOREIGN KEY (idkshp) REFERENCES kshps.kshp(idkshp) ON DELETE CASCADE;
ALTER TABLE buffets."transaction" ADD CONSTRAINT "FK_transaction_kshp_school_idkshp_school" FOREIGN KEY (idkshp_school) REFERENCES kshps.kshp_school(idkshp_school) ON DELETE CASCADE;


-- buffets.transaction_item внешние включи

ALTER TABLE buffets.transaction_item ADD CONSTRAINT "FK_transaction_item_product_idproduct" FOREIGN KEY (idproduct) REFERENCES buffets.product(idproduct) ON DELETE CASCADE;
ALTER TABLE buffets.transaction_item ADD CONSTRAINT "FK_transaction_item_transaction_idtransaction" FOREIGN KEY (idtransaction) REFERENCES buffets."transaction"(idtransaction) ON DELETE CASCADE;

-- DROP SCHEMA categories;

CREATE SCHEMA categories AUTHORIZATION postgres;

-- DROP SEQUENCE categories.category_idcategory_seq;

CREATE SEQUENCE categories.category_idcategory_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE categories.category_minedu_idcategory_minedu_seq;

CREATE SEQUENCE categories.category_minedu_idcategory_minedu_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE categories.category_user_idcategory_user_seq;

CREATE SEQUENCE categories.category_user_idcategory_user_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE categories.minedu_idminedu_seq;

CREATE SEQUENCE categories.minedu_idminedu_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE categories.price_idprice_seq;

CREATE SEQUENCE categories.price_idprice_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE categories.transaction_idtransaction_seq;

CREATE SEQUENCE categories.transaction_idtransaction_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;-- categories.minedu определение

-- Drop table

-- DROP TABLE categories.minedu;

CREATE TABLE categories.minedu (
	idminedu int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
	title varchar(100) NOT NULL,
	active bool NOT NULL,
	CONSTRAINT "PK_minedu" PRIMARY KEY (idminedu)
);


-- categories.category определение

-- Drop table

-- DROP TABLE categories.category;

CREATE TABLE categories.category (
	idcategory int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
	title varchar(100) NOT NULL,
	fulltitle varchar(200) NULL,
	idkshp int4 NOT NULL,
	idkshp_school int4 NOT NULL,
	"type" int2 NOT NULL,
	active bool NOT NULL,
	description varchar(500) NULL,
	prioritylevel int4 NOT NULL,
	CONSTRAINT "PK_category" PRIMARY KEY (idcategory)
);
CREATE INDEX "IX_category_idkshp" ON categories.category USING btree (idkshp);
CREATE INDEX "IX_category_idkshp_school" ON categories.category USING btree (idkshp_school);


-- categories.category_minedu определение

-- Drop table

-- DROP TABLE categories.category_minedu;

CREATE TABLE categories.category_minedu (
	idcategory_minedu int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
	idcategory int4 NOT NULL,
	idminedu int4 NOT NULL,
	active bool NOT NULL,
	CONSTRAINT "PK_category_minedu" PRIMARY KEY (idcategory_minedu)
);
CREATE INDEX "IX_category_minedu_idcategory" ON categories.category_minedu USING btree (idcategory);
CREATE INDEX "IX_category_minedu_idminedu" ON categories.category_minedu USING btree (idminedu);


-- categories.category_user определение

-- Drop table

-- DROP TABLE categories.category_user;

CREATE TABLE categories.category_user (
	idcategory_user int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
	idcategory int4 NOT NULL,
	iduser int4 NOT NULL,
	"start" timestamp NOT NULL,
	"end" timestamp NULL,
	active bool NOT NULL,
	CONSTRAINT "PK_category_user" PRIMARY KEY (idcategory_user)
);
CREATE INDEX "IX_category_user_idcategory" ON categories.category_user USING btree (idcategory);


-- categories.price определение

-- Drop table

-- DROP TABLE categories.price;

CREATE TABLE categories.price (
	idprice int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
	idcategory int4 NOT NULL,
	sum numeric NOT NULL,
	"start" timestamp NOT NULL,
	"end" timestamp NULL,
	CONSTRAINT "PK_price" PRIMARY KEY (idprice)
);
CREATE INDEX "IX_price_idcategory" ON categories.price USING btree (idcategory);


-- categories."transaction" определение

-- Drop table

-- DROP TABLE categories."transaction";

CREATE TABLE categories."transaction" (
	idtransaction int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
	idkshp int4 NOT NULL,
	idkshp_school int4 NOT NULL,
	idtransaction_parent int4 NULL,
	idclass int4 NULL,
	processingdate timestamp NOT NULL,
	sum numeric NOT NULL,
	subsidy numeric NOT NULL,
	idcategory int4 NOT NULL,
	"type" int2 NOT NULL,
	createddate timestamp NOT NULL,
	updatedate timestamp NOT NULL,
	idbill int4 NOT NULL,
	active bool NOT NULL,
	idcreateduser int4 NULL,
	CONSTRAINT "PK_transaction" PRIMARY KEY (idtransaction)
);
CREATE INDEX "IX_transaction_idbill1" ON categories.transaction USING btree (idbill);
CREATE INDEX "IX_transaction_idcategory" ON categories.transaction USING btree (idcategory);
CREATE INDEX "IX_transaction_idkshp1" ON categories.transaction USING btree (idkshp);


-- categories.category внешние включи

ALTER TABLE categories.category ADD CONSTRAINT "FK_category_kshp_idkshp" FOREIGN KEY (idkshp) REFERENCES kshps.kshp(idkshp) ON DELETE CASCADE;
ALTER TABLE categories.category ADD CONSTRAINT "FK_category_kshp_school_idkshp_school" FOREIGN KEY (idkshp_school) REFERENCES kshps.kshp_school(idkshp_school) ON DELETE CASCADE;


-- categories.category_minedu внешние включи

ALTER TABLE categories.category_minedu ADD CONSTRAINT "FK_category_minedu_category_idcategory" FOREIGN KEY (idcategory) REFERENCES categories.category(idcategory) ON DELETE CASCADE;
ALTER TABLE categories.category_minedu ADD CONSTRAINT "FK_category_minedu_minedu_idminedu" FOREIGN KEY (idminedu) REFERENCES categories.minedu(idminedu) ON DELETE CASCADE;


-- categories.category_user внешние включи

ALTER TABLE categories.category_user ADD CONSTRAINT "FK_category_user_category_idcategory" FOREIGN KEY (idcategory) REFERENCES categories.category(idcategory) ON DELETE CASCADE;


-- categories.price внешние включи

ALTER TABLE categories.price ADD CONSTRAINT "FK_price_category_idcategory" FOREIGN KEY (idcategory) REFERENCES categories.category(idcategory) ON DELETE CASCADE;


-- categories."transaction" внешние включи

ALTER TABLE categories."transaction" ADD CONSTRAINT "FK_transaction_bill_idbill" FOREIGN KEY (idbill) REFERENCES bills.bill(idbill) ON DELETE CASCADE;
ALTER TABLE categories."transaction" ADD CONSTRAINT "FK_transaction_category_idcategory" FOREIGN KEY (idcategory) REFERENCES categories.category(idcategory) ON DELETE CASCADE;
ALTER TABLE categories."transaction" ADD CONSTRAINT "FK_transaction_kshp_idkshp" FOREIGN KEY (idkshp) REFERENCES kshps.kshp(idkshp) ON DELETE CASCADE;

-- DROP SCHEMA kshps;

CREATE SCHEMA kshps AUTHORIZATION postgres;

-- DROP SEQUENCE kshps.kshp_idkshp_seq;

CREATE SEQUENCE kshps.kshp_idkshp_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE kshps.kshp_school_idkshp_school_seq;

CREATE SEQUENCE kshps.kshp_school_idkshp_school_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;
-- DROP SEQUENCE kshps.usergone_idusergone_seq;

CREATE SEQUENCE kshps.usergone_idusergone_seq
	INCREMENT BY 1
	MINVALUE 1
	MAXVALUE 2147483647
	START 1
	CACHE 1
	NO CYCLE;-- kshps.kshp определение

-- Drop table

-- DROP TABLE kshps.kshp;

CREATE TABLE kshps.kshp (
	idkshp int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
	title varchar(150) NOT NULL,
	short_title varchar(150) NULL,
	price_limit numeric NOT NULL,
	day_limit int4 NOT NULL,
	limit_action int2 NOT NULL,
	inn text NULL,
	bik text NULL,
	kbk text NULL,
	rs text NULL,
	oktmo text NULL,
	kpp varchar(9) NULL,
	active bool NOT NULL,
	phone varchar(20) NULL,
	director varchar(100) NULL,
	CONSTRAINT "PK_kshp" PRIMARY KEY (idkshp)
);


-- kshps.kshp_school определение

-- Drop table

-- DROP TABLE kshps.kshp_school;

CREATE TABLE kshps.kshp_school (
	idkshp_school int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
	idschool int4 NOT NULL,
	iddistrict int4 NOT NULL,
	idkshp int4 NOT NULL,
	algorithmfeedmark int2 NOT NULL,
	timeendfirtsshiftfeedmark interval NOT NULL,
	timeendsecondshiftfeedmark interval NOT NULL,
	teachermaybindingmenutouser bool NOT NULL,
	"start" timestamp NOT NULL,
	"end" timestamp NULL,
	active bool NOT NULL,
	CONSTRAINT "PK_kshp_school" PRIMARY KEY (idkshp_school),
	CONSTRAINT "FK_kshp_school_kshp_idkshp" FOREIGN KEY (idkshp) REFERENCES kshps.kshp(idkshp) ON DELETE CASCADE
);
CREATE INDEX "IX_kshp_school_idkshp" ON kshps.kshp_school USING btree (idkshp);


-- kshps.usergone определение

-- Drop table

-- DROP TABLE kshps.usergone;

CREATE TABLE kshps.usergone (
	idusergone int4 GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE) NOT NULL,
	idkshp int4 NOT NULL,
	idbill int4 NOT NULL,
	balance numeric NOT NULL,
	bill_num varchar(15) NOT NULL,
	createddate timestamp NOT NULL,
	iduser_calculated int4 NULL,
	calculateddate timestamp NULL,
	idschool int4 NOT NULL,
	CONSTRAINT "PK_usergone" PRIMARY KEY (idusergone),
	CONSTRAINT "FK_usergone_kshp_idkshp" FOREIGN KEY (idkshp) REFERENCES kshps.kshp(idkshp) ON DELETE CASCADE
);
CREATE INDEX "IX_usergone_idkshp" ON kshps.usergone USING btree (idkshp);